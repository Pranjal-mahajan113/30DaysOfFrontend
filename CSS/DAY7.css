body {
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 0;
  background: #f5f5f5;
  line-height: 1.6;
}

section {
  padding: 20px;
  border-bottom: 3px solid #ccc;
  background: white;
  margin-bottom: 10px;
}

h2 {
  background: #b59494;
  color: white;
  padding: 10px;
  border-radius: 5px;
}

.example-grid {
  background: #eee;
  padding: 10px;
  display: grid;
}

.example-grid div {
  background: #4CAF50;
  color: white;
  font-size: 18px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 4px;
}

/* ===============================
   1. BASIC GRID
   =============================== */
.basic-grid {
  display: grid;
  /* Enables grid layout */
  grid-template-columns: 100px 100px 100px;
  /* Three fixed-width columns */
  grid-template-rows: 80px 80px;
  /* Two fixed-height rows */
  gap: 10px;
  /* Space between items */
}

/* ===============================
   2. FRACTIONS & REPEAT
   =============================== */
.fraction-grid {
  display: grid;
  grid-template-columns:  repeat(3, 1fr);;
  /* 3 equal-width columns */
  gap: 10px;
}

/* ===============================
   3. MINMAX & RESPONSIVE
   =============================== */
.minmax-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  /* Auto-adjust columns */
  gap: 10px;
}

/* ===============================
   4. SPANNING ITEMS
   =============================== */
.span-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 10px;
}

.span-grid .wide {
  grid-column: span 2;
  /* Item spans 2 columns */
}

.span-grid .tall {
  grid-row: span 2;
  /* Item spans 2 rows */
}

/* ===============================
   5. NAMED AREAS
   =============================== */
.area-grid {
  display: grid;
  grid-template-columns: 150px 1fr;
  grid-template-rows: 60px 150px 60px;
  grid-template-areas:
    "header header"
    "sidebar content"
    "footer footer";
  gap: 5px;
}

.header {
  grid-area: header;
  background: #FF9800;
}

.sidebar {
  grid-area: sidebar;
  background: #9C27B0;
}

.content {
  grid-area: content;
  background: #03A9F4;
}

.footer {
  grid-area: footer;
  background: #E91E63;
}

/* ===============================
   6. IMPLICIT GRID
   =============================== */
.implicit-grid {
  display: grid;
  grid-template-columns: 100px 100px;
  grid-auto-rows: 80px;
  /* Height for rows not explicitly defined */
  gap: 10px;
}

/* ===============================
   7. ALIGNMENT
   =============================== */
.align-grid {
  display: grid;
  grid-template-columns: repeat(3, 100px);
  grid-template-rows: repeat(2, 100px);
  gap: 10px;
  justify-items: center;
  /* Horizontal alignment of items */
  align-items: center;
  /* Vertical alignment of items */
}

/* ===============================
   8. CONTENT ALIGNMENT
   =============================== */
.content-align-grid {
  display: grid;
  grid-template-columns: repeat(3, 100px);
  grid-template-rows: repeat(2, 100px);
  gap: 10px;
  justify-content: center;
  /* Align whole grid horizontally */
  align-content: center;
  /* Align whole grid vertically */
  height: 300px;
  /* Needed to see vertical alignment effect */
}

/* ===============================
   9. GRID AUTO FLOW
   =============================== */
.flow-grid {
  display: grid;
  grid-template-columns: repeat(3, 80px);
  gap: 10px;
  grid-auto-flow: column;
  /* Fill columns first */
}

/* ===============================
   10. OVERLAP
   =============================== */
.overlap-grid {
  display: grid;
  grid-template-columns: repeat(3, 120px);
  grid-template-rows: repeat(2, 120px);
}

.overlap-grid div:nth-child(1) {
  background: rgba(255, 0, 0, 0.7);
  grid-column: 1 / 3;
  grid-row: 1 / 3;
}

.overlap-grid div:nth-child(2) {
  background: rgba(0, 0, 255, 0.7);
  grid-column: 2 / 4;
  grid-row: 1 / 3;
}